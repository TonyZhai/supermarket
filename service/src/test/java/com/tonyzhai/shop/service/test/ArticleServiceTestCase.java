package com.tonyzhai.shop.service.test;import com.tonyzhai.shop.domain.Article;import com.tonyzhai.shop.domain.base.BaseInfo;import com.tonyzhai.shop.domain.base.support.DataPage;import com.tonyzhai.shop.service.ArticleService;import junit.framework.Assert;import org.apache.log4j.Logger;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.annotation.Rollback;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.springframework.transaction.annotation.Transactional;/** * ArticleService test case * * @author Tony Zhai * @since 13-2-24 PM11:25 */@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration("/applicationContext.xml")@Transactionalpublic class ArticleServiceTestCase {    Logger logger = Logger.getLogger(ArticleServiceTestCase.class);    @Autowired    private ArticleService articleService;    @Test    @Rollback(false)    public void testCreateArticle() {        for(int i = 100; i < 150; i++) {            Article article = new Article("title" + i, "content" + i);            articleService.createArticle(article);            Assert.assertEquals("content" + i, articleService.findArticle(article.getId()).getContent());        }    }    @Test    public void testPagedArticles() {        int start = 0;        int size = 2;        DataPage<Article> dataPage = articleService.pagedArticles(start, size);        Assert.assertTrue(size == dataPage.getPageSize());        logger.debug(dataPage);    }    @Test    @Rollback(false)    public void testModifyArticle() {        Article article = new Article("title2", "content2");        articleService.createArticle(article);        article.setContent("content2-1");        articleService.modifyArticle(article);        Assert.assertEquals("content2-1", articleService.findArticle(article.getId()).getContent());    }    @Test    public void testRemoveArticle() {        Article article = new Article("title3", "content3");        articleService.createArticle(article);        articleService.removeArticle(article.getId());        Assert.assertEquals(BaseInfo.Status.delete, articleService.findArticle(article.getId()).getBaseInfo().getStatus());    }}