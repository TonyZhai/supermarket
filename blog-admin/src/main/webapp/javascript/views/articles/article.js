$(function(){    var Article = Backbone.Model.extend({        defaults: function() {            return {                title: "empty article...",                order: Articles.nextOrder(),                done: false            };        },        initialize: function() {            if (!this.get("title")) {                this.set({"title": this.defaults().title});            }        },        toggle: function() {            this.save({done: !this.get("done")});        }    });    var ArticleList = Backbone.Collection.extend({        model: Article,        localStorage: new Backbone.LocalStorage("articles-backbone"),        done: function() {            return this.filter(function(article){ return article.get('done'); });        },        remaining: function() {            return this.without.apply(this, this.done());        },        nextOrder: function() {            if (!this.length) return 1;            return this.last().get('order') + 1;        },        comparator: function(article) {            return article.get('order');        }    });    var Articles = new ArticleList;    var ArticleView = Backbone.View.extend({        tagName:  "li",        template: _.template($('#item-template').html()),        events: {            "click .toggle"   : "toggleDone",            "dblclick .view"  : "edit",            "click a.destroy" : "clear",            "keypress .edit"  : "updateOnEnter",            "blur .edit"      : "close"        },        initialize: function() {            this.listenTo(this.model, 'change', this.render);            this.listenTo(this.model, 'destroy', this.remove);        },        render: function() {            this.$el.html(this.template(this.model.toJSON()));            this.$el.toggleClass('done', this.model.get('done'));            this.input = this.$('.edit');            return this;        },        toggleDone: function() {            this.model.toggle();        },        edit: function() {            this.$el.addClass("editing");            this.input.focus();        },        close: function() {            var value = this.input.val();            if (!value) {                this.clear();            } else {                this.model.save({title: value});                this.$el.removeClass("editing");            }        },        updateOnEnter: function(e) {            if (e.keyCode == 13) this.close();        },        clear: function() {            this.model.destroy();        }    });    var AppView = Backbone.View.extend({        el: $("#articleapp"),        statsTemplate: _.template($('#stats-template').html()),        events: {            "keypress #new-article":  "createOnEnter",            "click #clear-completed": "clearCompleted",            "click #toggle-all": "toggleAllComplete"        },        initialize: function() {            this.input = this.$("#new-article");            this.allCheckbox = this.$("#toggle-all")[0];            this.listenTo(Articles, 'add', this.addOne);            this.listenTo(Articles, 'reset', this.addAll);            this.listenTo(Articles, 'all', this.render);            this.footer = this.$('footer');            this.main = $('#main');            Articles.fetch();        },        render: function() {            var done = Articles.done().length;            var remaining = Articles.remaining().length;            if (Articles.length) {                this.main.show();                this.footer.show();                this.footer.html(this.statsTemplate({done: done, remaining: remaining}));            } else {                this.main.hide();                this.footer.hide();            }            this.allCheckbox.checked = !remaining;        },        addOne: function(article) {            var view = new ArticleView({model: article});            this.$("#article-list").append(view.render().el);        },        addAll: function() {            Articles.each(this.addOne, this);        },        createOnEnter: function(e) {            if (e.keyCode != 13) return;            if (!this.input.val()) return;            Articles.create({title: this.input.val()});            this.input.val('');        },        clearCompleted: function() {            _.invoke(Articles.done(), 'destroy');            return false;        },        toggleAllComplete: function () {            var done = this.allCheckbox.checked;            Articles.each(function (article) { article.save({'done': done}); });        }    });    var App = new AppView;});